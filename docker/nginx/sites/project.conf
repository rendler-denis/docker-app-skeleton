server {
    listen       80;
    server_name  ${NGX_SERVER_NAME};

    root ${NGX_ROOT_DIR};
    index ${NGX_INDEX_PHP} index.html index.htm;

    location / {
         try_files ${NGX_DOLLAR}uri ${NGX_DOLLAR}uri/ /${NGX_INDEX_PHP}${NGX_DOLLAR}is_args${NGX_DOLLAR}args;
    }

    location ~ /\.ht {
        deny all;
    }

    # DEV
    # This rule should only be placed on your development environment
    # In production, don't include this and don't deploy app_dev.php or config.php
    location ~ ^/(app_dev|config)\.php(/|${NGX_DOLLAR}) {
        fastcgi_pass php-upstream;
        fastcgi_split_path_info ^(.+\.php)(/.*)${NGX_DOLLAR};
        include fastcgi_params;
        # When you are using symlinks to link the document root to the
        # current version of your application, you should pass the real
        # application path instead of the path to the symlink to PHP
        # FPM.
        # Otherwise, PHP's OPcache may not properly detect changes to
        # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
        # for more information).
        fastcgi_param SCRIPT_FILENAME ${NGX_DOLLAR}realpath_root${NGX_DOLLAR}fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT ${NGX_DOLLAR}realpath_root;
    }
    # PROD
    location ~ ^/app\.php(/|${NGX_DOLLAR}) {
        fastcgi_pass php-upstream;
        fastcgi_split_path_info ^(.+\.php)(/.*)${NGX_DOLLAR};
        include fastcgi_params;
        # When you are using symlinks to link the document root to the
        # current version of your application, you should pass the real
        # application path instead of the path to the symlink to PHP
        # FPM.
        # Otherwise, PHP's OPcache may not properly detect changes to
        # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
        # for more information).
        fastcgi_param SCRIPT_FILENAME ${NGX_DOLLAR}realpath_root${NGX_DOLLAR}fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT ${NGX_DOLLAR}realpath_root;
        # Prevents URIs that include the front controller. This will 404:
        # http://domain.tld/app.php/some-path
        # Remove the internal directive to allow URIs like this
        internal;
    }

    # uncomment this section if you want to allow access to .php files
    #location ~ \.php${NGX_DOLLAR} {
    #    try_files ${NGX_DOLLAR}uri /${NGX_INDEX_PHP} =404;
    #    fastcgi_pass php-upstream;
    #    fastcgi_index ${NGX_INDEX_PHP};
    #    fastcgi_param SCRIPT_FILENAME ${NGX_DOLLAR}document_root${NGX_DOLLAR}fastcgi_script_name;
    #    include fastcgi_params;
    #}

    # return 404 for all other php files not matching the front controller
    # this prevents access to other php files you don't want to be accessible.
    location ~ \.php${NGX_DOLLAR} {
      return 404;
    }

    error_log /var/log/nginx/${NGX_SERVER_NAME}_error.log;
    access_log /var/log/nginx/${NGX_SERVER_NAME}_access.log;
}

